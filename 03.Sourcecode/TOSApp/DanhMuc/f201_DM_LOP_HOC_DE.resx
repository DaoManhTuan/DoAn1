<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_cmd_Cancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /waDQOCUk45aHAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="m_cmd_OK.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>