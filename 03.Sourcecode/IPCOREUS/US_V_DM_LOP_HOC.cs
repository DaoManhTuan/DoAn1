///************************************************
/// Generated by: tuandm
/// Date: 01/12/2015 03:09:18
/// Goal: Create User Service Class for V_DM_LOP_HOC
///************************************************
/// <summary>
/// Create User Service Class for V_DM_LOP_HOC
/// </summary>

using System;
using IPCOREDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;


namespace IPCOREUS
{

	public class US_V_DM_LOP_HOC : US_Object
	{
		private const string c_TableName = "V_DM_LOP_HOC";
		#region Public Properties
		public decimal dcID 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID"] = value;
			}
		}

		public bool IsIDNull()	{
			return pm_objDR.IsNull("ID");
		}

		public void SetIDNull() {
			pm_objDR["ID"] = System.Convert.DBNull;
		}

		public string strMA_LOP_HOC 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "MA_LOP_HOC", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["MA_LOP_HOC"] = value;
			}
		}

		public bool IsMA_LOP_HOCNull() 
		{
			return pm_objDR.IsNull("MA_LOP_HOC");
		}

		public void SetMA_LOP_HOCNull() {
			pm_objDR["MA_LOP_HOC"] = System.Convert.DBNull;
		}

		public decimal dcID_HOC_PHAN 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_HOC_PHAN", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_HOC_PHAN"] = value;
			}
		}

		public bool IsID_HOC_PHANNull()	{
			return pm_objDR.IsNull("ID_HOC_PHAN");
		}

		public void SetID_HOC_PHANNull() {
			pm_objDR["ID_HOC_PHAN"] = System.Convert.DBNull;
		}

		public string strMA_HOC_PHAN 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "MA_HOC_PHAN", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["MA_HOC_PHAN"] = value;
			}
		}

		public bool IsMA_HOC_PHANNull() 
		{
			return pm_objDR.IsNull("MA_HOC_PHAN");
		}

		public void SetMA_HOC_PHANNull() {
			pm_objDR["MA_HOC_PHAN"] = System.Convert.DBNull;
		}

		public string strTEN_HOC_PHAN 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "TEN_HOC_PHAN", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["TEN_HOC_PHAN"] = value;
			}
		}

		public bool IsTEN_HOC_PHANNull() 
		{
			return pm_objDR.IsNull("TEN_HOC_PHAN");
		}

		public void SetTEN_HOC_PHANNull() {
			pm_objDR["TEN_HOC_PHAN"] = System.Convert.DBNull;
		}

		public decimal dcID_GIANG_VIEN 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_GIANG_VIEN", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_GIANG_VIEN"] = value;
			}
		}

		public bool IsID_GIANG_VIENNull()	{
			return pm_objDR.IsNull("ID_GIANG_VIEN");
		}

		public void SetID_GIANG_VIENNull() {
			pm_objDR["ID_GIANG_VIEN"] = System.Convert.DBNull;
		}

		public string strMA_GIANG_VIEN 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "MA_GIANG_VIEN", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["MA_GIANG_VIEN"] = value;
			}
		}

		public bool IsMA_GIANG_VIENNull() 
		{
			return pm_objDR.IsNull("MA_GIANG_VIEN");
		}

		public void SetMA_GIANG_VIENNull() {
			pm_objDR["MA_GIANG_VIEN"] = System.Convert.DBNull;
		}

		public string strTEN_GIANG_VIEN 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "TEN_GIANG_VIEN", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["TEN_GIANG_VIEN"] = value;
			}
		}

		public bool IsTEN_GIANG_VIENNull() 
		{
			return pm_objDR.IsNull("TEN_GIANG_VIEN");
		}

		public void SetTEN_GIANG_VIENNull() {
			pm_objDR["TEN_GIANG_VIEN"] = System.Convert.DBNull;
		}

		public decimal dcID_HOC_KY 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_HOC_KY", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_HOC_KY"] = value;
			}
		}

		public bool IsID_HOC_KYNull()	{
			return pm_objDR.IsNull("ID_HOC_KY");
		}

		public void SetID_HOC_KYNull() {
			pm_objDR["ID_HOC_KY"] = System.Convert.DBNull;
		}

		public string strMA_HOC_KY 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "MA_HOC_KY", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["MA_HOC_KY"] = value;
			}
		}

		public bool IsMA_HOC_KYNull() 
		{
			return pm_objDR.IsNull("MA_HOC_KY");
		}

		public void SetMA_HOC_KYNull() {
			pm_objDR["MA_HOC_KY"] = System.Convert.DBNull;
		}

		public decimal dcTRANG_THAI_HSD 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "TRANG_THAI_HSD", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["TRANG_THAI_HSD"] = value;
			}
		}

		public bool IsTRANG_THAI_HSDNull()	{
			return pm_objDR.IsNull("TRANG_THAI_HSD");
		}

		public void SetTRANG_THAI_HSDNull() {
			pm_objDR["TRANG_THAI_HSD"] = System.Convert.DBNull;
		}

		#endregion


		#region Init Functions
		public US_V_DM_LOP_HOC() 
		{
			pm_objDS = new DS_V_DM_LOP_HOC();
			pm_strTableName = c_TableName;
			pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
		}

		public US_V_DM_LOP_HOC(DataRow i_objDR): this()
		{
			this.DataRow2Me(i_objDR);
		}

		public US_V_DM_LOP_HOC(decimal i_dbID) 
		{
			pm_objDS = new DS_V_DM_LOP_HOC();
			pm_strTableName = c_TableName;
			IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
			v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
			SqlCommand v_cmdSQL;
			v_cmdSQL = v_objMkCmd.getSelectCmd();
			this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
			pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
		}
		#endregion


	}
}
