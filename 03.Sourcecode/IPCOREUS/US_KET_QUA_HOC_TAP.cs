///************************************************
/// Generated by: tuandm
/// Date: 07/12/2015 05:04:28
/// Goal: Create User Service Class for KET_QUA_HOC_TAP
///************************************************
/// <summary>
/// Create User Service Class for KET_QUA_HOC_TAP
/// </summary>

using System;
using IPCOREDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;


namespace IPCOREUS
{

	public class US_KET_QUA_HOC_TAP : US_Object
	{
		private const string c_TableName = "KET_QUA_HOC_TAP";
		#region Public Properties
		public decimal dcID 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID"] = value;
			}
		}

		public bool IsIDNull()	{
			return pm_objDR.IsNull("ID");
		}

		public void SetIDNull() {
			pm_objDR["ID"] = System.Convert.DBNull;
		}

		public decimal dcID_SINH_VIEN 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_SINH_VIEN", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_SINH_VIEN"] = value;
			}
		}

		public bool IsID_SINH_VIENNull()	{
			return pm_objDR.IsNull("ID_SINH_VIEN");
		}

		public void SetID_SINH_VIENNull() {
			pm_objDR["ID_SINH_VIEN"] = System.Convert.DBNull;
		}

		public decimal dcID_HOC_KY 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_HOC_KY", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_HOC_KY"] = value;
			}
		}

		public bool IsID_HOC_KYNull()	{
			return pm_objDR.IsNull("ID_HOC_KY");
		}

		public void SetID_HOC_KYNull() {
			pm_objDR["ID_HOC_KY"] = System.Convert.DBNull;
		}

		public decimal dcGPA 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "GPA", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["GPA"] = value;
			}
		}

		public bool IsGPANull()	{
			return pm_objDR.IsNull("GPA");
		}

		public void SetGPANull() {
			pm_objDR["GPA"] = System.Convert.DBNull;
		}

		public decimal dcCPA 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "CPA", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["CPA"] = value;
			}
		}

		public bool IsCPANull()	{
			return pm_objDR.IsNull("CPA");
		}

		public void SetCPANull() {
			pm_objDR["CPA"] = System.Convert.DBNull;
		}

		#endregion


		#region Init Functions
		public US_KET_QUA_HOC_TAP() 
		{
			pm_objDS = new DS_KET_QUA_HOC_TAP();
			pm_strTableName = c_TableName;
			pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
		}

		public US_KET_QUA_HOC_TAP(DataRow i_objDR): this()
		{
			this.DataRow2Me(i_objDR);
		}

		public US_KET_QUA_HOC_TAP(decimal i_dbID) 
		{
			pm_objDS = new DS_KET_QUA_HOC_TAP();
			pm_strTableName = c_TableName;
			IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
			v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
			SqlCommand v_cmdSQL;
			v_cmdSQL = v_objMkCmd.getSelectCmd();
			this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
			pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
		}
		#endregion


	}
}
